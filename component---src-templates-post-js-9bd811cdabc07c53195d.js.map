{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/components/NewsItem/NewsItem.module.css","webpack:///./src/components/NewsItem/NewsItem.js"],"names":["PageTemplate","data","page","markdownRemark","siteMetadata","site","frontmatter","title","name","content","excerpt","description","author","property","updated","lastUpdated","node","module","exports","NewsItem","className","styles","root","format","Date","fields","date","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,gFAoCeA,UA3BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAOD,EAAKE,eACVC,EAAiBH,EAAKI,KAAtBD,aAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAWF,EAAKI,YAAYC,MAA5B,aAA8CH,EAAaG,OAC3D,0BAAMC,KAAK,cAAcC,QAASP,EAAKQ,SAAWT,EAAKI,KAAKD,aAAaO,cACzE,0BAAMH,KAAK,SAASC,QAASL,EAAaQ,OAAOJ,OACjD,0BAAMK,SAAS,WAAWJ,QAASP,EAAKI,YAAYC,QACpD,0BACEM,SAAS,iBACTJ,QAASP,EAAKQ,SAAWT,EAAKI,KAAKD,aAAaO,eAGpD,kBAAC,IAAD,CAAMJ,MAAM,OAAOO,QAASZ,EAAKI,YAAYS,aAC3C,kBAAC,IAAD,CAAUC,KAAMd,Q,uBCzBxBe,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,kC,uICsBjDC,EAjBE,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAH,OACf,yBAAKI,UAAWC,IAAOC,MACrB,wBAAIF,UAAWC,IAAOd,OACpB,8BACGgB,IAAO,IAAIC,KAAKR,EAAKS,OAAOC,MAAO,cACnC,OACAV,EAAKV,YAAYC,QAGtB,yBAAKoB,wBAAyB,CAAEC,OAAQZ,EAAKa","file":"component---src-templates-post-js-9bd811cdabc07c53195d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\n\nimport Page from '../components/Page';\nimport TemplateWrapper from '../layouts';\nimport NewsItem from '../components/NewsItem';\n\nconst PageTemplate = ({ data }) => {\n  const page = data.markdownRemark;\n  const { siteMetadata } = data.site;\n\n  return (\n    <TemplateWrapper>\n      <Helmet>\n        <title>{`${page.frontmatter.title} · NEWS · ${siteMetadata.title}`}</title>\n        <meta name=\"description\" content={page.excerpt || data.site.siteMetadata.description} />\n        <meta name=\"author\" content={siteMetadata.author.name} />\n        <meta property=\"og:title\" content={page.frontmatter.title} />\n        <meta\n          property=\"og:description\"\n          content={page.excerpt || data.site.siteMetadata.description}\n        />\n      </Helmet>\n      <Page title=\"NEWS\" updated={page.frontmatter.lastUpdated}>\n        <NewsItem node={page} />\n      </Page>\n    </TemplateWrapper>\n  );\n};\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n          email\n        }\n      }\n      buildTime\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      tableOfContents\n      frontmatter {\n        title\n      }\n      fields {\n        date\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewsItem-module--root--Qdrge\",\"title\":\"NewsItem-module--title--pOYBq\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport styles from './NewsItem.module.css';\n\nconst NewsItem = ({ node }) => (\n  <div className={styles.root}>\n    <h3 className={styles.title}>\n      <span>\n        {format(new Date(node.fields.date), 'DD.MM.YYYY')}\n        {' // '}\n        {node.frontmatter.title}\n      </span>\n    </h3>\n    <div dangerouslySetInnerHTML={{ __html: node.html }} />\n  </div>\n);\n\nNewsItem.propTypes = {\n  node: PropTypes.object.isRequired,\n};\n\nexport default NewsItem;\n"],"sourceRoot":""}