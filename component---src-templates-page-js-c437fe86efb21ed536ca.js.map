{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["PageTemplate","data","page","markdownRemark","siteMetadata","site","frontmatter","title","name","content","excerpt","description","author","property","updated","lastUpdated","dangerouslySetInnerHTML","__html","html"],"mappings":"2FAAA,oEAmCeA,UA3BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAOD,EAAKE,eACVC,EAAiBH,EAAKI,KAAtBD,aAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAWF,EAAKI,YAAYC,MAA5B,MAAuCH,EAAaG,OACpD,0BAAMC,KAAK,cAAcC,QAASP,EAAKQ,SAAWT,EAAKI,KAAKD,aAAaO,cACzE,0BAAMH,KAAK,SAASC,QAASL,EAAaQ,OAAOJ,OACjD,0BAAMK,SAAS,WAAWJ,QAASP,EAAKI,YAAYC,QACpD,0BACEM,SAAS,iBACTJ,QAASP,EAAKQ,SAAWT,EAAKI,KAAKD,aAAaO,eAGpD,kBAAC,IAAD,CAAMJ,MAAOL,EAAKI,YAAYC,MAAOO,QAASZ,EAAKI,YAAYS,aAC7D,yBAAKC,wBAAyB,CAAEC,OAAQf,EAAKgB","file":"component---src-templates-page-js-c437fe86efb21ed536ca.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\n\nimport Page from '../components/Page';\nimport TemplateWrapper from '../layouts';\n\nconst PageTemplate = ({ data }) => {\n  const page = data.markdownRemark;\n  const { siteMetadata } = data.site;\n\n  return (\n    <TemplateWrapper>\n      <Helmet>\n        <title>{`${page.frontmatter.title} Â· ${siteMetadata.title}`}</title>\n        <meta name=\"description\" content={page.excerpt || data.site.siteMetadata.description} />\n        <meta name=\"author\" content={siteMetadata.author.name} />\n        <meta property=\"og:title\" content={page.frontmatter.title} />\n        <meta\n          property=\"og:description\"\n          content={page.excerpt || data.site.siteMetadata.description}\n        />\n      </Helmet>\n      <Page title={page.frontmatter.title} updated={page.frontmatter.lastUpdated}>\n        <div dangerouslySetInnerHTML={{ __html: page.html }} />\n      </Page>\n    </TemplateWrapper>\n  );\n};\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query PageQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n          email\n        }\n      }\n      buildTime\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      tableOfContents\n      frontmatter {\n        title\n        lastUpdated\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}